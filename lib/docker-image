#!/bin/bash

# ------------
# (mstring) getRemoteDockerImages  (string) $imageSearchString
# (mstring) getDockerImageTags     (string) $imageName
# (bool)    imageEnvironmentExists (string) $imageName
# ------------

# ------------
# Returns image names filtered by given image search string.
#
# @author  Björn Hempel
# @version 1.0
# @date    2017-02-16
# ------------
getRemoteDockerImages ()
{
    local image="$1"

    result=$(docker search "$image")

    result=$(echo "$result" | tail -n +2 | awk '{print $1}')

    echo "$result"
}

# ------------
# List all possible tags to given available image name
#
# @author  Björn Hempel
# @version 1.0
# @date    2017-02-16
# ------------
getDockerImageTags ()
{
    local repository="$1"

    curl -s -S "https://registry.hub.docker.com/v2/repositories/library/$repository/tags/" | \
        sed -e 's/,/,\n/g' -e 's/\[/\[\n/g' | \
        grep '"name"' | \
        awk -F\" '{print $4;}' | \
        sort -fu | \
        sed -e "s/^/${repository}:/"
}

# ------------
# Check if image environment exists.
#
# @author  Björn Hempel
# @version 1.0
# @date    2017-02-16
# ------------
imageEnvironmentExists ()
{
    local            imageName="$1"
    local imageEnvironmentPath="images/$imageName"

    [ -d "$imageEnvironmentPath" ] && return 0 || return 1
}

